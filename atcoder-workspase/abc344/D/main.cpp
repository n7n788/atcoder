#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <unordered_set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
#include <regex>
#include <atcoder/all>
using namespace std;
using namespace atcoder;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF_ll 1001001001001001001ll
#define INF 1001001001
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}



// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
    string t;
    cin >> t;
    int n;
    cin >> n;
    vi a(n);
    // vector s(n, vs());

    int m = t.size();
    vvi dp(2, vi(m + 1, INF));
    dp.at(0).at(0) = 0;
    REP(ni, n) {
        cin >> a.at(ni);
        vs s(a.at(ni));
        REP(i, a.at(ni)) cin >> s.at(i);

        REP(i, m + 1) {
            chmin(dp.at(1).at(i), dp.at(0).at(i));
            for (string s1: s) {
                int sz = s1.size();
                if (i + sz > m) continue;
                if (t.substr(i, sz) == s1) {
                    chmin(dp.at(1).at(i + sz), dp.at(0).at(i) + 1);
                }
            }
        }
        swap(dp.at(0), dp.at(1));
    }

    int ans = dp.at(0).at(m);
    cout << (ans != INF ? ans : -1) << endl;
    return 0;
}
