#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <unordered_set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
#include <regex>
#include <atcoder/all>
using namespace std;
using namespace atcoder;
using mint = modint998244353;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF_ll 1001001001001001001ll
#define INF 1001001001
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}


// void solve(long long N, std::vector<long long> A, std::vector<long long> B)
// {
//     int n2 = 1 << N;
//     vb dp(n2, false); // dp[s] := 残りの集合がsのとき、次のプレイヤーが勝利: 1, 敗北: 0
    
//     // 初期値: 最終盤面
//     dp.at(0) = false;
//     // 最終盤面から順(sが小さい)に探索
//     REP(s, n2) {
//         bool now = false;
//         REP(i, N) REP(j, i) {
//             if ((s >> i & 1) && (s >> j & 1)) {
//                 if (A.at(i) == A.at(j) || B.at(i) == B.at(j)) {
//                     // iビット目, jビット目を下げる: xor
//                     now |= !dp.at(s ^ 1 << i ^ 1 << j);
//                 }
//             } 
//         }
//         dp[s] = now;
//     }

//     cout << (dp.at(n2 - 1) ? "Takahashi" : "Aoki") << endl;
//     return;
// }

void solve(long long N, std::vector<long long> A, std::vector<long long> B)
{
    int n2 = 1 << N;
    vb dp(n2, false); // dp[s] := 使用した集合がsのとき、次のプレイヤーが勝利: 1, 敗北: 0
    
    // 初期値: 最終盤面
    dp.at(n2 - 1) = false;
    // 最終盤面から順(sが大きい)に探索
    REV(s, n2 - 1, 0) {
        bool now = false;
        REP(i, N) REP(j, i) {
            if ((s >> i & 1) || (s >> j & 1)) continue;
            if (A.at(i) != A.at(j) && B.at(i) != B.at(j)) continue;
            now |= !dp.at(s | (1 << i) | (1 << j));
        }
        dp[s] = now;
    }

    cout << (dp.at(0) ? "Takahashi" : "Aoki") << endl;
    return;
}

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
        long long N;
    std::scanf("%lld", &N);
    std::vector<long long> A(N);
    std::vector<long long> B(N);
    for(int i = 0 ; i < N ; i++){
        std::scanf("%lld", &A[i]);
        std::scanf("%lld", &B[i]);
    }
        solve(N, std::move(A), std::move(B));
        return 0;
}
