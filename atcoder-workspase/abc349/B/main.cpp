#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
#include <atcoder/all>
using namespace std;
using namespace atcoder;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF_ll 1001001001001001001ll
#define INF 1001001001
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}

const string YES = "Yes";
const string NO = "No";

void solve(string S) {
    int n = S.size();
    vi cnts(26, 0);
    vi cntcnts(101, 0);
    REP(i, n) cnts.at(S.at(i) - 'a')++;
    REP(i, 26) cntcnts.at(cnts.at(i))++;
    bool ok = true;
    FOR(i, 1, 100) {
        if (cntcnts.at(i) != 0 && cntcnts.at(i) != 2)
            ok = false;
    }

    cout << (ok ? YES : NO) << endl;
    return;
}
// void solve(std::string S){
//     int n = S.size();
//     vector<int> c(26, 0);
//     vector<int> d(n + 1, 0);
//     bool ans = true;

//     REP(i, n) c.at(S.at(i) - 'a')++;
//     REP(i, 26) d.at(c.at(i))++;
//     FOR(i, 1, n) {
//         ans &= (d.at(i) == 0 || d.at(i) == 2);
//     }

//     cout << (ans ? "Yes" : "No") << endl;
//     return;
// }

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
        std::string S;
    std::cin >> S;
        solve(S);
        return 0;
}
