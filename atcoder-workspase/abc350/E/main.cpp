#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
#include <atcoder/all>
using namespace std;
using namespace atcoder;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF_ll 1001001001001001001ll
#define INF 1001001001
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}


// void solve(long long N, long long A, long long X, long long Y)
// {
//     unordered_map<ll, double> memo;
//     auto f = [&](auto f, ll n) -> double {
//         if (n == 0) return 0;
//         if (memo.count(n)) return memo[n];

//         double ansX = f(f, n / A) + X;
//         double ansY = Y * 6.0;
//         FOR(i, 2, 6) ansY += f(f, n / i);
//         ansY /= 5.0;
//         return memo[n] = min(ansX, ansY);
//     };

//     printf("%.12f\n", f(f, N));
//     return;
// }

void solve(ll n, ll a, ll x, ll y)
{
    unordered_map<ll, double> memo;
    auto f = [&](auto f, ll n) -> double {
        if (n == 0) return 0;
        if (memo.count(n)) return memo[n];
        double ans = 6.0 * y;
        FOR(i, 2, 6) {
            ans += f(f, n / i);
        }
        ans /= 5.0;
        chmin(ans, f(f, n / a) + x);
        return memo[n] = ans;
    };

    printf("%.10f\n", f(f, n));
    return;
}
// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
        long long N;
    std::scanf("%lld", &N);
    long long A;
    std::scanf("%lld", &A);
    long long X;
    std::scanf("%lld", &X);
    long long Y;
    std::scanf("%lld", &Y);
        solve(N, A, X, Y);
        return 0;
}
