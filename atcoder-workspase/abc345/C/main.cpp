#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <unordered_set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <cassert>
#include <iomanip>
#include <atcoder/all>
using namespace std;
using namespace atcoder;

#define REP(i, n) for (int i = 0, i##_len = (n); i < i##_len; ++i)
#define FOR(i, a, b) for (int i = (a), i##_len = (b); i <= i##_len; ++i)
#define REV(i, a, b) for (int i = (a); i >= (b); --i)
#define CLR(a, b) memset((a), (b), sizeof(a))
#define DUMP(x) cout << #x << " = " << (x) << endl;
#define INF_ll 1001001001001001001ll
#define INF 1001001001
#define fcout cout << fixed << setprecision(12)

using ll = long long;
using vi = vector<int>;
using vl = vector<long long>;
using vs = vector<string>;
using vc = vector<char>;
using vb = vector<bool>;
using vpii = vector<pair<int, int>>;
using vpll = vector<pair<long long, long long>>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<long long>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvvi = vector<vector<vector<int>>>;
using pii = pair<int, int>;

template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}

ll c2(ll x) 
{
    return x * (x - 1) / 2;
}

void solve(std::string S)
{
    int n = S.size();
    unordered_map<char, ll> mp;
    REP(i, n) mp[S.at(i)]++;
    ll ans = c2(n);
    bool same = false;
    for (auto [ch, cnt]: mp) {
        if (cnt >= 2) same = true;
        ans -= c2(cnt);
    }
    if (same) ans++;
    cout << ans << endl;
    return;
}

// void solve1(string S)
// {
//     unordered_set<string> st;
//     int n = S.size();
//     REP(i, n - 1) FOR(j, i + 1, n - 1) {
//         swap(S.at(i), S.at(j));
//         st.insert(S);
//         swap(S.at(i), S.at(j));
//     }

//     cout << st.size() << endl;
// }

// Generated by 2.13.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main()
{
        std::string S;
    std::cin >> S;
        solve(S);
        // solve1(S);S
        return 0;
}
